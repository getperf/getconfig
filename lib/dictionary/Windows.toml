# Windows OS インベントリ収集シナリオ

# WinRM で対象 Windows サーバに接続し、メトリック定義のコマンド群を実行します

# Excel 検査対象シート

# 設定パラメータは以下の通りです
# 
# 対象サーバ
#     OS ホスト名
# プラットフォーム
#     Windows
# URL,IPアドレス
#     SSH 接続先のIPもしくは、IP:ポート番号 を入力します。
# ユーザID
#     config/config.groovy 内に記述した、SSH 接続アカウント。
#     Account01を指定した場合、以下のパラメータを参照します
#      // Windows 接続情報
#      account.Windows.Account01.user      = 'administrator'
#      account.Windows.Account01.password  = 'P@ssw0rd'

# [[metrics]]

# メトリック定義コマンドリスト
# 
# id  
#     メトリックID。必須。ユニークにする必要あり
# name 
#     メトリック名
# category 
#     メトリックの分類
# level 
#     採取レベル。高い方が優先度が下がる
#     -1, 0, 1, 2 から選択、-1の場合、コマンドを実行しない。既定は0
# deviceFlasg
#     true, false. デバイス結果を登録する場合、trueにする
# comment
#     メトリックの定義
# type = "Cmdlet"
#     PowerShellコマンドの場合、"Cmdlet"、DOSコマンドの場合、"Cmd"
# text 
#     コマンド実行テキスト、 ''' で括る
#     空白の場合、メトリックの定義のみでコマンドは実行しません

[[metrics]]

id = "Domain"
name = "ドメイン名"
category = "OSリリース"

[[metrics]]

id = "Manufacturer"
name = "メーカー"
category = "OSリリース"

[[metrics]]

id = "Model"
name = "モデル"
category = "OSリリース"

[[metrics]]

id = "PrimaryOwnerName"
name = "所有者"
category = "OSリリース"

[[metrics]]

id = "system"
name = "システム名"
category = "OSリリース"
level = 0
comment = "Win32_ComputerSystem オブジェクトを検索"
type = "Cmdlet"
text = '''
Get-WmiObject -Class Win32_ComputerSystem
'''

[[metrics]]

id = "os_conf.install_date"
name = "インストール日付"
category = "OSリリース"

[[metrics]]

id = "os_conf.version"
name = "カレントバージョン"
category = "OSリリース"

[[metrics]]

id = "os_conf.build"
name = "カレントビルド"
category = "OSリリース"

[[metrics]]

id = "os_conf.product_id"
name = "製品ID"
category = "OSリリース"

[[metrics]]

id = "os_conf"
name = "OSバージョン"
category = "OSリリース"
level = 0
comment = "HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion 検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' |
Format-List
'''

[[metrics]]

id = "os_caption"
name = "OS名"
category = "OSリリース"

[[metrics]]

id = "os_csd_version"
name = "サービスパック"
category = "OSリリース"

[[metrics]]

id = "os_architecture"
name = "アーキテクチャ"
category = "OSリリース"

[[metrics]]

id = "os_product_type"
name = "製品タイプ"
category = "OSリリース"
comment = "1:ワークステーション 2:ドメインコントローラ 3:サーバー"

[[metrics]]

id = "os"
name = "OS名"
category = "OSリリース"
level = 0
comment = "Win32_OperatingSystem を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_OperatingSystem |
Format-List Caption,CSDVersion,ProductType,OSArchitecture
'''

[[metrics]]

id = "driver"
name = "ドライバー"
category = "OS設定"
level = 1
comment = "Win32_PnPSignedDriver を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_PnPSignedDriver
'''

[[metrics]]

id = "fips"
name = "FIPSモード"
category = "OS設定"
level = 1
comment = "HKLM:System\\CurrentControlSet\\Control\\Lsa\\FIPSAlgorithmPolicy を検索"
type = "Cmdlet"
text = '''
Get-Item 'HKLM:System\CurrentControlSet\Control\Lsa\FIPSAlgorithmPolicy'
'''

[[metrics]]

id = "virturalization"
name = "仮想化プラットフォーム"
category = "OS設定"
level = 1
comment = "Win32_ComputerSystem を検索"
type = "Cmdlet"
text = '''
Get-WmiObject -Class Win32_ComputerSystem | Select Model | FL
'''


[[metrics]]

id = "monitor"
name = "ディスプレイの設定"
category = "OS設定"
level = 1
comment = "Win32_DesktopMonitor を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_DesktopMonitor | FL
'''

[[metrics]]

id = "monitor.height"
name = "ディスプレイ解像度Y"
category = "OS設定"

[[metrics]]

id = "monitor.width"
name = "ディスプレイ解像度X"
category = "OS設定"

[[metrics]]

id = "ie_version"
name = "IEバージョン"
category = "OS設定"
level = 1
comment = "HKLM:SOFTWARE\\Microsoft\\Internet Explorer を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:SOFTWARE\Microsoft\Internet Explorer'
'''

[[metrics]]

id = "remote_desktop"
name = "リモートデスクトップ有効化"
category = "OS設定"
level = 1
comment = "HKLM:System\\CurrentControlSet\\Control\\Terminal Server を検索"
type = "Cmdlet"
text = '''
(Get-Item 'HKLM:System\CurrentControlSet\Control\Terminal Server').GetValue('fDenyTSConnections')
'''

[[metrics]]

id = "ntp"
name = "NTPアドレス"
category = "OS設定"
level = 1
comment = "HKLM:System\\CurrentControlSet\\Services\\W32Time\\Parameters を検索"
type = "Cmdlet"
text = '''
(Get-Item 'HKLM:System\CurrentControlSet\Services\W32Time\Parameters').GetValue('NtpServer')
'''

[[metrics]]

id = "model_name"
name = "プロセッサーモデル"
category = "CPU"

[[metrics]]

id = "mhz"
name = "CPUクロック"
category = "CPU"

[[metrics]]

id = "cpu_socket"
name = "CPUソケット数"
category = "CPU"

[[metrics]]

id = "cpu_core"
name = "CPUコア数"
category = "CPU"

[[metrics]]

id = "cpu_total"
name = "CPUスレッド数"
category = "CPU"

[[metrics]]

id = "cpu"
name = "CPU情報"
category = "CPU"
level = 0
comment = "Win32_Processor を検索"
type = "Cmdlet"
text = '''
Get-WmiObject -Class Win32_Processor | Format-List DeviceID, Name, MaxClockSpeed, SocketDesignation, NumberOfCores, NumberOfLogicalProcessors
'''

[[metrics]]

id = "visible_memory"
name = "物理メモリ量"
category = "メモリ"

[[metrics]]

id = "virtual_memory"
name = "仮想メモリ量"
category = "メモリ"

[[metrics]]

id = "free_memory"
name = "空きメモリ量"
category = "メモリ"

[[metrics]]

id = "memory"
name = "メモリ情報"
category = "メモリ"
level = 0
comment = "Win32_OperatingSystem を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_OperatingSystem |
select TotalVirtualMemorySize,TotalVisibleMemorySize,
FreePhysicalMemory,FreeVirtualMemory,FreeSpaceInPagingFiles
'''

[[metrics]]

id = "network"
name = "IPアドレス"
category = "ネットワーク"
level = 0
comment = "Win32_NetworkAdapterConfiguration を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_NetworkAdapterConfiguration |
Where{$_.IpEnabled -Match 'True'} |
Select ServiceName, MacAddress, IPAddress, DefaultIPGateway, Description, IPSubnet |
Format-List
'''

[[metrics]]

id = "subnet"
name = "サブネット"
category = "ネットワーク"

[[metrics]]

id = "gateway"
name = "ゲートウェイ"
category = "ネットワーク"

[[metrics]]

id = "nic_teaming"
name = "NICチーミング"
category = "ネットワーク"
level = 2
comment = "Get-NetLbfoTeamNic を検索"
type = "Cmdlet"
text = '''
Get-NetLbfoTeamNic
'''

[[metrics]]

id = "network_profile"
name = "ネットワークプロファイル"
category = "ネットワーク"
level = 0
comment = "Get-NetConnectionProfile 検索"
type = "Cmdlet"
text = '''
Get-NetConnectionProfile | FL
'''

[[metrics]]

id = "net_bind"
name = "ネットワークバインド名"
category = "ネットワーク"
level = 2
comment = "Get-NetAdapterBinding を検索"
type = "Cmdlet"
text = '''
Get-NetAdapterBinding | FL
'''

[[metrics]]

id = "net_ip"
name = "ネットワーク接続"
category = "ネットワーク"
level = 2
comment = "Get-NetIPInterface を検索"
type = "Cmdlet"
text = '''
Get-NetIPInterface | FL
'''


[[metrics]]

id = "tcp"
name = "TCP キープアライブ設定"
category = "ネットワーク"
level = 2
comment = "HKLM:SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' |
Format-List
'''

[[metrics]]

id = "dns"
name = "DNSサーバ"
category = "ネットワーク"
level = 1
comment = "Get-DnsClientServerAddress を検索"
type = "Cmdlet"
text = '''
Get-DnsClientServerAddress|FL
'''

[[metrics]]

id = "firewall"
name = "ファイヤーウォール許可リスト"
category = "ファイヤーウォール"
level = 2
comment = "Get-NetFirewallRule を検索"
type = "Cmdlet"
text = '''
Get-NetFirewallRule -Direction Inbound -Enabled True
'''

[[metrics]]

id = "storage_timeout"
name = "ストレージタイムアウト"
category = "ストレージ"
level = 0
comment = "HKLM:SYSTEM\\CurrentControlSet\\Services\\disk を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:SYSTEM\CurrentControlSet\Services\disk'
'''

[[metrics]]

id = "filesystem"
name = "ディスク容量"
level = 0
category = "ストレージ"
comment = "Win32_LogicalDisk を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_LogicalDisk | Format-List *
'''

[[metrics]]

id = "user"
name = "無効化アカウント"
category = "ユーザ"
level = 2
comment = "Win32_UserAccount を検索"
type = "Cmdlet"
text = '''
$result = @()
$accountObjList =  Get-CimInstance -ClassName Win32_Account
$userObjList = Get-CimInstance -ClassName Win32_UserAccount
foreach($userObj in $userObjList)
{
    $IsLocalAccount = ($userObjList | ?{$_.SID -eq $userObj.SID}).LocalAccount
    if($IsLocalAccount)
    {
        $query = 'WinNT://{0}/{1},user' -F $env:COMPUTERNAME,$userObj.Name
        $dirObj = New-Object -TypeName System.DirectoryServices.DirectoryEntry -ArgumentList $query
        $UserFlags = $dirObj.InvokeGet('UserFlags')
        $DontExpirePasswd = [boolean]($UserFlags -band 0x10000)
        $AccountDisable   = [boolean]($UserFlags -band 0x2)
        $obj = New-Object -TypeName PsObject
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'UserName' -Value $userObj.Name
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'DontExpirePasswd' -Value $DontExpirePasswd
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'AccountDisable' -Value $AccountDisable
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'SID' -Value $userObj.SID
        $result += $obj
    }
}
$result | Format-List
'''

[[metrics]]

id = "user.DontExpirePassword"
name = "パスワード期限ありアカウント"
category = "ユーザ"

[[metrics]]

id = "whoami"
name = "whoami名"
category = "ユーザ"
level = 0
comment = "whoami コマンドを検索"
type = "Cmd"
text = '''
whoami /user
'''

[[metrics]]

id = "logon_test"
name = "ログオンテスト"
category = "ユーザ"
comment = "ログオン検査用ユーザでPowerShellリモート疎通を確認"

[[metrics]]

id = "user_account_control"
name = "UAC設定"
category = "ユーザ"
level = 1
comment = "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System'
'''

[[metrics]]

id = "uac.ConsentPromptBehaviorAdmin"
name = "UAC設定 ConsentPromptBehaviorAdmin"
category = "ユーザ"

[[metrics]]

id = "uac.ConsentPromptBehaviorUser"
name = "UAC設定 ConsentPromptBehaviorUser"
category = "ユーザ"

[[metrics]]

id = "uac.EnableInstallerDetection"
name = "UAC設定 EnableInstallerDetection"
category = "ユーザ"

[[metrics]]

id = "net_accounts"
name = "アカウントポリシー"
category = "ユーザ"
level = 2
comment = "net accounts を検索"
type = "Cmd"
text = '''
net accounts
'''

[[metrics]]

id = "service"
name = "サービス構成"
category = "サービス"
level = 1
comment = "Get-Service を検索"
type = "Cmdlet"
text = '''
Get-Service | FL
'''

[[metrics]]

id = "packages"
name = "パッケージ構成"
category = "パッケージ"
level = 0
comment = "Win32_Product を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_Product |
Select-Object Name, Vendor, Version |
Format-List
Get-ChildItem -Path(
'HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall',
'HKCU:SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall') |
% { Get-ItemProperty $_.PsPath | Select-Object DisplayName, Publisher, DisplayVersion } |
Format-List
'''

[[metrics]]

id = "feature"
name = "Windows機能"
category = "Windows機能"
level = 1
comment = "Get-WindowsFeature を検索"
type = "Cmdlet"
text = '''
Get-WindowsFeature | ?{$_.InstallState -eq [Microsoft.Windows.ServerManager.Commands.InstallState]::Installed} | FL
'''

[[metrics]]

id = "etc_hosts"
name = "hostsファイル"
category = "ホスト"
level = 1
comment = "{win_dir}\\system32\\drivers\\etc\\hosts を検索"
type = "Cmdlet"
text = '''
Get-Content 'C:\Windows\system32\Drivers\etc\hosts'
'''

[[metrics]]

id = "patch_lists"
name = "パッチリスト"
category = "パッチ"
level = 0
comment = "wmic qfeコマンドを検索"
type = "Cmd"
text = '''
wmic qfe
'''

[[metrics]]

id = "task_scheduler"
name = "タスクスケジューラ"
category = "タスク"
level = 1
comment = "Get-ScheduledTask を検索"
type = "Cmdlet"
text = '''
Get-ScheduledTask |
? {$_.State -eq 'Ready'} |
Get-ScheduledTaskInfo |
? {$_.NextRunTime -ne $null}|
Format-List
'''

[[metrics]]

id = "system_log"
name = "Windowsシステムイベントログ"
category = "その他"
level = 2
comment = "Get-EventLog を検索"
type = "Cmdlet"
text = '''
Get-EventLog system | Where-Object { $_.EntryType -eq 'Error' } | FL
'''

[[metrics]]

id = "apps_log"
name = "Windowsアプリイベントログ"
category = "その他"
level = 2
comment = "Get-EventLog application を検索"
type = "Cmdlet"
text = '''
Get-EventLog application | Where-Object { $_.EntryType -eq 'Error' } | FL
'''

