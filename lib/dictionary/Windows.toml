[[metrics]]

id = "Domain"
name = "ドメイン名"
category = "システム情報"
level = -1
deviceFlag = false
comment = "ドメイン名"

[[metrics]]

id = "Manufacturer"
name = "メーカー"
category = "システム情報"
level = -1
deviceFlag = false
comment = "メーカー"

[[metrics]]

id = "Model"
name = "モデル"
category = "システム情報"
level = -1
deviceFlag = false
comment = "モデル"

[[metrics]]

id = "PrimaryOwnerName"
name = "所有者"
category = "システム情報"
level = -1
deviceFlag = false
comment = "所有者"

[[metrics]]

id = "Name"
name = "コンピューター名"
category = "システム情報"
level = -1
deviceFlag = false
comment = "コンピューター名"

[[metrics]]

id = "system"
name = "システム情報"
category = "システム情報"
level = 0
deviceFlag = false
comment = "Win32_ComputerSystem オブジェクトから、システム情報を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' |
Format-List
'''

[[metrics]]

id = "os_conf.install_date"
name = "インストール日付"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "インストール日付"

[[metrics]]

id = "os_conf.version"
name = "カレントバージョン"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "OSカレントバージョン"

[[metrics]]

id = "os_conf.build"
name = "カレントビルド"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "OSカレントビルド"

[[metrics]]

id = "os_conf.product_id"
name = "製品ID"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "OSプロダクトID"

[[metrics]]

id = "os_conf"
name = "OSバージョン"
category = "OSリリース"
level = 0
deviceFlag = false
comment = "HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersionレジストリからOSバージョン検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion' |
Format-List
'''

[[metrics]]

id = "os_caption"
name = "OS名"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "OS名称"

[[metrics]]

id = "os_csd_version"
name = "サービスパック"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "サービスパック名"

[[metrics]]

id = "os_architecture"
name = "アーキテクチャ"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "アーキテクチャ(32bit/64bit)"

[[metrics]]

id = "os_product_type"
name = "製品タイプ"
category = "OSリリース"
level = -1
deviceFlag = false
comment = "1:ワークステーション 2:ドメインコントローラ 3:サーバー"

[[metrics]]

id = "os"
name = "OS情報"
category = "OSリリース"
level = 0
deviceFlag = false
comment = "Win32_OperatingSystem オブジェクトから、OS情報を検索"

[[metrics]]

id = "driver"
name = "ドライバー"
category = "OS設定"
level = 1
deviceFlag = true
comment = "Win32_PnPSignedDriver オブジェクトから、ドライバー登録件数を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_OperatingSystem |
Format-List Caption,CSDVersion,ProductType,OSArchitecture
'''

[[metrics]]

id = "fips"
name = "FIPSモード"
category = "OS設定"
level = 1
comment = "HKLM:System\\CurrentControlSet\\Control\\Lsa\\FIPSAlgorithmPolicyから、FIPSモードを検索"
type = "Cmdlet"
text = '''
Get-Item 'HKLM:System\CurrentControlSet\Control\Lsa\FIPSAlgorithmPolicy'
'''

[[metrics]]

id = "virturalization"
name = "仮想化プラットフォーム"
category = "OS設定"
level = 1
deviceFlag = false
comment = "Win32_ComputerSystem オブジェクトから仮想化プラットフォームを検索"
type = "Cmdlet"
text = '''
Get-WmiObject -Class Win32_ComputerSystem | Select Model | FL
'''

[[metrics]]

id = "storage_timeout"
name = "ストレージタイムアウト"
category = "OS設定"
level = 1
comment = "HKLM:SYSTEM\\CurrentControlSet\\Services\\diskからストレージタイムアウトを検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:SYSTEM\CurrentControlSet\Services\disk'
'''

[[metrics]]

id = "monitor"
name = "ディスプレイの設定"
category = "OS設定"
level = 1
deviceFlag = false
comment = "Win32_DesktopMonitorオブジェクトから、ディスプレイの詳細設定を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_DesktopMonitor | FL
'''

[[metrics]]

id = "monitor.height"
name = "ディスプレイ解像度Y"
category = "OS設定"
level = -1
deviceFlag = false
comment = "ディスプレイ解像度Y"

[[metrics]]

id = "monitor.width"
name = "ディスプレイ解像度X"
category = "OS設定"
level = -1
deviceFlag = false
comment = "ディスプレイ解像度X"

[[metrics]]

id = "ie_version"
name = "IEバージョン"
category = "OS設定"
deviceFlag = false
level = 1
comment = "HKLM:SOFTWARE\\Microsoft\\Internet Explorerから、IEバージョンを検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:SOFTWARE\Microsoft\Internet Explorer'
'''

[[metrics]]

id = "system_log"
name = "Windowsシステムイベントログ"
category = "OS設定"
level = 2
deviceFlag = true
comment = "Get-EventLog コマンドで、Windowsシステムイベントログのエラーメッセージを検索"
type = "Cmdlet"
text = '''
Get-EventLog system | Where-Object { $_.EntryType -eq 'Error' } | FL
'''

[[metrics]]

id = "apps_log"
name = "Windowsアプリイベントログ"
category = "OS設定"
level = 2
deviceFlag = true
comment = "Get-EventLog コマンドで、Windowsアプリイベントログのエラーメッセージを検索"
type = "Cmdlet"
text = '''
Get-EventLog application | Where-Object { $_.EntryType -eq 'Error' } | FL
'''

[[metrics]]

id = "ntp"
name = "NTP"
category = "OS設定"
level = 1
deviceFlag = true
comment = "HKLM:System\\CurrentControlSet\\Services\\W32Time\\ParametersからNTP設定を検索"
type = "Cmdlet"
text = '''
(Get-Item 'HKLM:System\CurrentControlSet\Services\W32Time\Parameters').GetValue('NtpServer')
'''

[[metrics]]

id = "user_account_control"
name = "ユーザ制御"
category = "OS設定"
level = 1
deviceFlag = true
comment = "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Systemからユーザ制御を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System'
'''

[[metrics]]

id = "remote_desktop"
name = "リモートデスクトップ"
category = "OS設定"
level = 1
deviceFlag = false
comment = "HKLM:System\\CurrentControlSet\\Control\\Terminal Serverからリモートデスクトップ設定を検索"
type = "Cmdlet"
text = '''
(Get-Item 'HKLM:System\CurrentControlSet\Control\Terminal Server').GetValue('fDenyTSConnections')
'''

[[metrics]]

id = "model_name"
name = "プロセッサーモデル"
category = "CPU"
level = -1
deviceFlag = false
comment = "CPUプロセッサーモデル"

[[metrics]]

id = "mhz"
name = "CPUクロック"
category = "CPU"
level = -1
deviceFlag = false
comment = "CPUクロック数[MHz]"

[[metrics]]

id = "cpu_socket"
name = "CPUソケット数"
category = "CPU"
level = -1
deviceFlag = false
comment = "CPUソケット数"

[[metrics]]

id = "cpu_core"
name = "CPUコア数"
category = "CPU"
level = -1
deviceFlag = false
comment = "CPUコア数"

[[metrics]]

id = "cpu_total"
name = "CPUスレッド数"
category = "CPU"
level = -1
deviceFlag = false
comment = "CPUスレッド数"

[[metrics]]

id = "cpu"
name = "CPU情報"
category = "CPU"
level = 0
deviceFlag = false
comment = "Win32_Processor オブジェクトからCPU情報を検索"
type = "Cmdlet"
text = '''
Get-WmiObject -Class Win32_Processor | Format-List DeviceID, Name, MaxClockSpeed, SocketDesignation, NumberOfCores, NumberOfLogicalProcessors
'''

[[metrics]]

id = "visible_memory"
name = "物理メモリ量"
category = "メモリ"
level = -1
deviceFlag = false
comment = "物理メモリ量[KB]"

[[metrics]]

id = "virtual_memory"
name = "仮想メモリ量"
category = "メモリ"
level = -1
deviceFlag = false
comment = "仮想メモリ量[KB]"

[[metrics]]

id = "free_memory"
name = "空きメモリ量"
category = "メモリ"
level = -1
deviceFlag = false
comment = "メモリ空き容量[KB]"

[[metrics]]

id = "memory"
name = "メモリ情報"
category = "メモリ"
level = 0
deviceFlag = false
comment = "Win32_OperatingSystem オブジェクトから、メモリ情報を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_OperatingSystem |
select TotalVirtualMemorySize,TotalVisibleMemorySize,
FreePhysicalMemory,FreeVirtualMemory,FreeSpaceInPagingFiles
'''

[[metrics]]

id = "dns"
name = "DNSサーバ"
category = "ネットワーク"
level = 1
deviceFlag = false
comment = "Get-DnsClientServerAddress　コマンドで、DNSサーバ検索"
type = "Cmdlet"
text = '''
Get-DnsClientServerAddress|FL
'''

[[metrics]]

id = "nic_teaming"
name = "NICチーミング"
category = "ネットワーク"
level = 2
deviceFlag = true
comment = "Get-NetLbfoTeamNic コマンドで、NICチーミング(NetLBFO)名を検索"
type = "Cmdlet"
text = '''
Get-NetLbfoTeamNic
'''

[[metrics]]

id = "tcp"
category = "TCP"
level = 2
deviceFlag = true
comment = "HKLM:SYSTEM\\CurrentControlSet\\Services\\Tcpip\\ParametersからTCP設定を検索"
type = "Cmdlet"
text = '''
Get-ItemProperty 'HKLM:SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' |
Format-List
'''

[[metrics]]

id = "network"
name = "ネットワーク構成"
category = "ネットワーク"
level = 2
deviceFlag = true
comment = "Win32_NetworkAdapterConfiguration オブジェクトから、IP,GW,Indexを検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_NetworkAdapterConfiguration |
Where{$_.IpEnabled -Match 'True'} |
Select ServiceName, MacAddress, IPAddress, DefaultIPGateway, Description, IPSubnet |
Format-List
'''

[[metrics]]

id = "network_profile"
name = "ネットワークプロファイル"
category = "ネットワークI/F"
level = 0
deviceFlag = true
comment = "Get-NetConnectionProfile コマンドで、ネットワークプロファイル検索。0:パブリック,1:プライベート,2:ドメイン認証"
type = "Cmdlet"
text = '''
Get-NetConnectionProfile
'''

[[metrics]]

id = "net_bind"
name = "ネットワークバインド"
category = "ネットワークI/F"
level = 2
deviceFlag = true
comment = "Get-NetAdapterBinding コマンドで、ネットワークバインドを検索"
type = "Cmdlet"
text = '''
Get-NetAdapterBinding | FL
'''

[[metrics]]

id = "net_ip"
name = "ネットワークI/F状態"
category = "ネットワークI/F"
level = 2
deviceFlag = true
comment = "Get-NetIPInterface コマンドで、ネットワーク優先順位を検索"
type = "Cmdlet"
text = '''
Get-NetIPInterface | FL
'''

[[metrics]]

id = "firewall"
name = "ファイヤーウォール受信許可設定"
category = "ファイヤーウォール"
level = 2
deviceFlag = true
comment = "Get-NetFirewallRuleコマンドで、Windows Firewall の受信規制リストを検索"
type = "Cmdlet"
text = '''
Get-NetFirewallRule -Direction Inbound -Enabled True
'''

[[metrics]]

id = "filesystem"
name = "ディスク容量"
level = 1
deviceFlag = true
category = "ストレージ"
comment = "Win32_LogicalDisk オブジェクトから、ストレージ容量を検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_LogicalDisk | Format-List *
'''

[[metrics]]

id = "logon_test"
name = "ログオンテスト"
level = -1
deviceFlag = false
category = "ユーザ"
comment = "config.groovyに記述したログオン検査用ユーザでPowerShellリモート疎通を確認"

[[metrics]]

id = "user"
name = "ユーザ情報"
category = "ユーザ"
level = 2
deviceFlag = true
comment = "Win32_UserAccount オブジェクトから、ローカルアカウントのロック情報を検索"
type = "Cmdlet"
text = '''
$result = @()
$accountObjList =  Get-CimInstance -ClassName Win32_Account
$userObjList = Get-CimInstance -ClassName Win32_UserAccount
foreach($userObj in $userObjList)
{
    $IsLocalAccount = ($userObjList | ?{$_.SID -eq $userObj.SID}).LocalAccount
    if($IsLocalAccount)
    {
        $query = 'WinNT://{0}/{1},user' -F $env:COMPUTERNAME,$userObj.Name
        $dirObj = New-Object -TypeName System.DirectoryServices.DirectoryEntry -ArgumentList $query
        $UserFlags = $dirObj.InvokeGet('UserFlags')
        $DontExpirePasswd = [boolean]($UserFlags -band 0x10000)
        $AccountDisable   = [boolean]($UserFlags -band 0x2)
        $obj = New-Object -TypeName PsObject
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'UserName' -Value $userObj.Name
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'DontExpirePasswd' -Value $DontExpirePasswd
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'AccountDisable' -Value $AccountDisable
        Add-Member -InputObject $obj -MemberType NoteProperty -Name 'SID' -Value $userObj.SID
        $result += $obj
    }
}
$result | Format-List
'''

[[metrics]]

id = "etc_hosts"
name = "hostsファイル"
category = "ホスト"
level = 1
deviceFlag = true
comment = "{win_dir}\\system32\\drivers\\etc\\hosts からホストリスト検索"
type = "Cmdlet"
text = '''
Get-Content '$($env:windir)\system32\Drivers\etc\hosts'
'''

[[metrics]]

id = "patch_lists"
name = "パッチリスト"
category = "パッチ"
level = 0
deviceFlag = true
comment = "wmic qfeコマンドで、パッチリストを検索"
type = "Cmd"
text = '''
wmic qfe
'''

[[metrics]]

id = "service"
name = "サービス構成"
category = "サービス"
level = 1
deviceFlag = true
comment = "Get-Service コマンドで、サービスのステータスを検索"
type = "Cmdlet"
text = '''
Get-Service | FL
'''

[[metrics]]

id = "packages"
name = "パッケージ構成"
category = "パッケージ"
level = 0
deviceFlag = true
comment = "Win32_Product オブジェクトから、パッケージ情報検索"
type = "Cmdlet"
text = '''
Get-WmiObject Win32_Product |
Select-Object Name, Vendor, Version |
Format-List
Get-ChildItem -Path(
'HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall',
'HKCU:SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall') |
% { Get-ItemProperty $_.PsPath | Select-Object DisplayName, Publisher, DisplayVersion } |
Format-List
'''

[[metrics]]

id = "feature"
name = "Windows機能"
category = "Windows機能"
level = 1
deviceFlag = true
comment = "Get-WindowsFeature コマンドで、インストールされたWindows機能を検索"
type = "Cmdlet"
text = '''
Get-WindowsFeature | ?{$_.InstallState -eq [Microsoft.Windows.ServerManager.Commands.InstallState]::Installed} | FL
'''

[[metrics]]

id = "task_scheduler"
name = "タスクスケジューラ"
category = "タスク"
level = 1
deviceFlag = true
comment = "Get-ScheduledTask　コマンドで、Windows タスクスケジューラ情報を検索"
type = "Cmdlet"
text = '''
Get-ScheduledTask |
? {$_.State -eq 'Ready'} |
Get-ScheduledTaskInfo |
? {$_.NextRunTime -ne $null}|
Format-List
'''
