# Oracle データベースインベントリ収集シナリオ

# JDBC 経由で Oracle に接続し、メトリック定義のSQL 群を実行します

# Excel 検査対象シート

# 設定パラメータは以下の通りです
# 
# 対象サーバ
#     データベース名を入力
# プラットフォーム
#     Oracle
# URL,IPアドレス
#     IPアドレス
# ユーザID
#     config/config.groovy 内に記述した、JDBC 接続アカウント。
#     Account01を指定した場合、以下のパラメータを参照します
#      // Oracle 接続情報
#      account.Oracle.Account01.user      = 'scott'
#      account.Oracle.Account01.password  = 'tiger'

# [[metrics]]

# メトリック定義SQLリスト
# 
# id  
#     メトリックID。必須。ユニークにする必要あり
# name 
#     メトリック名
# category 
#     メトリックの分類
# level 
#     採取レベル。高い方が優先度が下がる
#     -1, 0, 1, 2 から選択、-1の場合、コマンドを実行しない。既定は0
# comment
#     メトリックの定義
# text 
#     SQL実行テキスト、 ''' で括る
#     空白の場合、メトリックの定義のみでコマンドは実行しません

[[metrics]]

category = "システム情報"
name = "インスタンス名"
id = "dbinfo.instance_name"

[[metrics]]

category = "システム情報"
name = "データベース名"
id = "dbinfo.db_name"

[[metrics]]

category = "システム情報"
name = "データベースユニーク名"
id = "dbinfo.db_unique_name"

[[metrics]]

category = "システム情報"
name = "ドメイン名"
id = "dbinfo.db_domain"

[[metrics]]

category = "システム情報"
name = "DBブロックサイズ"
id = "dbinfo.db_block_size"

[[metrics]]

category = "システム情報"
name = "DBID"
id = "dbattrs.dbid"

[[metrics]]

category = "システム情報"
name = "バージョン"
id = "dbcomps.version"

[[metrics]]

category = "システム情報"
name = "コンパチブルバージョン"
id = "dbinfo.compatible"

[[metrics]]

category = "システム情報"
name = "エディション"
id = "dbinstance.edition"

[[metrics]]

category = "システム情報"
name = "データベース製品名"
id = "dbvers.Oracle Database"

[[metrics]]

category = "RAC情報"
name = "クラスターインスタンス"
id = "dbinfo.cluster_database_instances"

[[metrics]]

category = "RAC情報"
name = "Oracle Real Application Clusters"
id = "dbcomps.Oracle Real Application Clusters"

[[metrics]]

category = "RAC情報"
name = "クラスターデータベース"
id = "dbinfo.cluster_database"

[[metrics]]

category = "データベース設定"
name = "カレントSCN"
id = "dbattrs.current_scn"

[[metrics]]

category = "データベース設定"
name = "オープンモード"
id = "dbattrs.open_mode"

[[metrics]]

category = "データベース設定"
name = "フォースロギング"
id = "dbattrs.force_logging"

[[metrics]]

category = "データベース設定"
name = "アーカイバー"
id = "dbinstance.archiver"

[[metrics]]

category = "データベース設定"
name = "ログイン数"
id = "dbinstance.logins"

[[metrics]]

category = "データベース設定"
name = "ログモード"
id = "dbattrs.log_mode"

[[metrics]]

category = "ホスト構成"
name = "CPUソケット数"
id = "hostconfig.num_cpu_sockets"

[[metrics]]

category = "ホスト構成"
name = "CPUコア数"
id = "hostconfig.num_cpu_cores"

[[metrics]]

category = "ホスト構成"
name = "トータルCPU数"
id = "hostconfig.num_cpus"

[[metrics]]

category = "ホスト構成"
name = "物理メモリMB"
id = "hostconfig.physical_memory_mb"

[[metrics]]

category = "ホスト構成"
name = "プラットフォーム名"
id = "dbattrs.platform_name"

[[metrics]]

category = "言語・ロケール"
name = "パラメータ：nls_territory"
id = "nls.nls_territory"

[[metrics]]

category = "言語・ロケール"
name = "パラメータ：nls_language"
id = "nls.nls_language"

[[metrics]]

category = "言語・ロケール"
name = "パラメータ：nls_nchar_characterset"
id = "nls.nls_nchar_characterset"

[[metrics]]

category = "言語・ロケール"
name = "パラメータ：nls_length_semantics"
id = "nls.nls_length_semantics"

[[metrics]]

category = "言語・ロケール"
name = "パラメータ：nls_characterset"
id = "nls.nls_characterset"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：memory_management"
id = "dbinfo.memory_management"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：statistics_level"
id = "dbinfo.statistics_level"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：sga_target"
id = "dbinfo.sga_target"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：sga_max_size"
id = "dbinfo.sga_max_size"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：memory_target"
id = "dbinfo.memory_target"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：memory_max_target"
id = "dbinfo.memory_max_target"

[[metrics]]

category = "メモリ構成"
name = "パラメータ：pga_aggregate_target"
id = "dbinfo.pga_aggregate_target"

[[metrics]]

category = "メモリ構成"
name = "SGAデータベースバッファー"
id = "sgasize.Database Buffers"

[[metrics]]

category = "メモリ構成"
name = "SGA固定サイズ"
id = "sgasize.Fixed Size"

[[metrics]]

category = "メモリ構成"
name = "SGA REDOバッファー"
id = "sgasize.Redo Buffers"

[[metrics]]

category = "メモリ構成"
name = "SGA可変サイズ"
id = "sgasize.Variable Size"

[[metrics]]

category = "メモリプール割当て"
name = "パラメータ：shared_pool_size"
id = "dbinfo.shared_pool_size"

[[metrics]]

category = "メモリプール割当て"
name = "パラメータ：streams_pool_size"
id = "dbinfo.streams_pool_size"

[[metrics]]

category = "メモリプール割当て"
name = "パラメータ：large_pool_size"
id = "dbinfo.large_pool_size"

[[metrics]]

category = "メモリプール割当て"
name = "パラメータ：java_pool_size"
id = "dbinfo.java_pool_size"

[[metrics]]

category = "メモリプール割当て"
name = "パラメータ：db_cache_size"
id = "dbinfo.db_cache_size"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：db_recovery_file_dest"
id = "dbinfo.db_recovery_file_dest"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：db_recovery_file_dest_size"
id = "dbinfo.db_recovery_file_dest_size"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：default_tbs_type"
id = "nls.default_tbs_type"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：default_permanent_tablespace"
id = "nls.default_permanent_tablespace"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：default_temp_tablespace"
id = "nls.default_temp_tablespace"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：spfile"
id = "dbinfo.spfile"

[[metrics]]

category = "ストレージ構成"
name = "パラメータ：diagnostic_dest"
id = "dbinfo.diagnostic_dest"

[[metrics]]

category = "ストレージ構成"
name = "REDOログ数"
id = "redoinfo.redo_count"

[[metrics]]

category = "ストレージ構成"
name = "REDOログミラーリング"
id = "redoinfo.redo_mirror"

[[metrics]]

category = "ストレージ構成"
name = "REDOログサイズ"
id = "redoinfo.redo_size"

[[metrics]]

category = "ストレージサマリ"
name = "表領域のディスク総容量[MB]"
id = "sumstorage.datafiles"

[[metrics]]

category = "ストレージサマリ"
name = "一時表領域のディスク総容量[MB]"
id = "sumstorage.tempfiles"

[[metrics]]

category = "ストレージサマリ"
name = "Redoログのディスク総容量[MB]"
id = "sumstorage.redologs"

[[metrics]]

category = "ストレージサマリ"
name = "制御ファイルのディスク総容量[MB]"
id = "sumstorage.controlfiles"

[[metrics]]

id = "dbstorage"
name = "ストレージ"
category = "SQL実行結果"
text = '''
select 
  tablespace_name, 
  nvl(total_bytes / 1024 / 1024, 0) as "size(MB)",
  nvl((total_bytes - free_total_bytes) / 1024 / 1024, 0) as "used(MB)", 
  nvl(free_total_bytes / 1024 / 1024, 0) as "free(MB)", 
  nvl((total_bytes - free_total_bytes) / total_bytes * 100, 100) as "rate(%)" 
from 
  (
    select 
      tablespace_name, 
      sum(bytes) total_bytes 
    from 
      dba_data_files 
    group by 
      tablespace_name
  ), 
  (
    select 
      tablespace_name free_tablespace_name, 
      sum(bytes) free_total_bytes 
    from 
      dba_free_space 
    group by 
      tablespace_name
  ) 
where 
  tablespace_name = free_tablespace_name(+)
'''

[[metrics]]

id = "dbattrs"
name = "データベース情報"
category = "SQL実行結果"
comment = "'V$DATABASE' の検索"
text = '''
SELECT *
  FROM v$database
'''

[[metrics]]

id = "dbinstance"
name = "DBインスタンス"
category = "SQL実行結果"
comment = "'V$INSTANCE' の検索"
text = '''
SELECT *
  FROM v$instance
'''

[[metrics]]

id = "hostconfig"
name = "ホスト構成"
category = "SQL実行結果"
comment = "'V$OSSTAT' の検索"
text = '''
SELECT LOWER(stat_name),
       value
  FROM v$osstat
 WHERE LOWER(stat_name) in ('physical_memory_bytes','num_cpu_cores','num_cpus','num_cpu_sockets')
'''

[[metrics]]

id = "dbcomps"
name = "データベース構成"
category = "SQL実行結果"
comment = "'DBA_REGISTRY' の検索"
text = '''
SELECT comp_name
     , version
     , status
  FROM dba_registry
 ORDER BY comp_name
'''

[[metrics]]

id = "dbfeatusage"
name = "データベース機能"
category = "SQL実行結果"
comment = "'DBA_FEATURE_USAGE_STATISTICS'の検索"
text = '''
SELECT u1.name
     , u1.detected_usages
     , INITCAP(u1.currently_used) currently_used
     , u1.version
  FROM dba_feature_usage_statistics u1
 WHERE version = (SELECT MAX(u2.version)
                    FROM dba_feature_usage_statistics u2
                   WHERE u2.name = u1.name
                 )
   AND u1.detected_usages > 0
   AND u1.dbid = (SELECT dbid FROM v$database)
'''

[[metrics]]

id = "dbinfo"
name = "DBパラメータ"
comment = "'V$PARAMETER' の検索"
category = "SQL実行結果"
text = '''
SELECT   name
       , value
       , description
    FROM v$parameter
ORDER BY name
       , value
       , description
'''

[[metrics]]

id = "dbvers"
name = "DBバージョン"
category = "SQL実行結果"
comment = "'PRODUCT_COMPONENT_VERSION' の検索"
text = '''
SELECT product
     , version
     , status
  FROM product_component_version
 ORDER BY product
'''

[[metrics]]

id = "nls"
name = "言語・ロケール"
category = "SQL実行結果"
comment = "'SYS.PROPS$' の検索"
text = '''
SELECT   LOWER(name)
       , value$ value
       , comment$ as "comment"
    FROM sys.props$
   WHERE upper(name) LIKE 'NLS%'
      OR upper(name) LIKE 'DEFAULT%'
ORDER BY name
       , value
'''


[[metrics]]

id = "redoinfo"
name = "Redoログ構成"
comment = "'V$LOG' の検索"
category = "SQL実行結果"
text = '''
SELECT   group#
       , thread#
       , members
       , bytes
       , status
       , archived
       , first_change#
       , to_char(first_time, 'yyyy-mm-dd hh24:mi:ss') first_time
    FROM v$log
'''

[[metrics]]

id = "sgasize"
name = "sgasize"
comment = "'V$SGA' の検索"
category = "SQL実行結果"
text = '''
SELECT   name
       , value
    FROM v$sga
ORDER BY name
'''

[[metrics]]

id = "sysmetric"
name = "データベース統計"
comment = "'V$SYSMETRIC' の検索"
category = "SQL実行結果"
text = '''
SELECT   TO_CHAR(begin_time , 'YYYY-MM-DD HH24:MI:SS') begin_time
       , TO_CHAR(end_time   , 'YYYY-MM-DD HH24:MI:SS') end_time
--       , intsize_csec
--       , group_id
--       , metric_id
       , value
       , metric_name
--       , metric_unit
    FROM v$sysmetric
   WHERE group_id = 2
ORDER BY begin_time
       , metric_name
'''

[[metrics]]

id = "systime"
name = "処理時間統計"
comment = "'V$SYS_TIME_MODEL' の検索"
category = "SQL実行結果"
text = '''
SELECT  LPAD(' ', 2*level-1)||stat_name stat_name
      , ROUND(value/1000000,2) seconds
      , ROUND(value/1000000/60,2) minutes
   FROM (select 0 id, 9 pid, null stat_name, null value from dual
          UNION
         SELECT DECODE(stat_name,'DB time',10) id
              , DECODE(stat_name,'DB time',0) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'DB time'
          UNION
         SELECT DECODE(stat_name,'DB CPU',20) id
              , DECODE(stat_name,'DB CPU',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'DB CPU'
          UNION
         SELECT DECODE(stat_name,'connection management call elapsed time',21) id
              , DECODE(stat_name,'connection management call elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'connection management call elapsed time'
          UNION
         SELECT DECODE(stat_name,'sequence load elapsed time',22) id
              , DECODE(stat_name,'sequence load elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'sequence load elapsed time'
          UNION
         SELECT DECODE(stat_name,'sql execute elapsed time',23) id
              , DECODE(stat_name,'sql execute elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'sql execute elapsed time'
          UNION
         SELECT DECODE(stat_name,'parse time elapsed',24) id
              , DECODE(stat_name,'parse time elapsed',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'parse time elapsed'
          UNION
         SELECT DECODE(stat_name,'hard parse elapsed time',30) id
              , DECODE(stat_name,'hard parse elapsed time',24) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'hard parse elapsed time'
          UNION
         SELECT DECODE(stat_name,'hard parse (sharing criteria) elapsed time',40) id
              , DECODE(stat_name,'hard parse (sharing criteria) elapsed time',30) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'hard parse (sharing criteria) elapsed time'
          UNION
         SELECT DECODE(stat_name,'hard parse (bind mismatch) elapsed time',50) id
              , DECODE(stat_name,'hard parse (bind mismatch) elapsed time',40) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'hard parse (bind mismatch) elapsed time'
          UNION
         SELECT DECODE(stat_name,'failed parse elapsed time',31) id
              , DECODE(stat_name,'failed parse elapsed time',24) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'failed parse elapsed time'
          UNION
         SELECT DECODE(stat_name,'failed parse (out of shared memory) elapsed time',41) id
              , DECODE(stat_name,'failed parse (out of shared memory) elapsed time',31) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'failed parse (out of shared memory) elapsed time'
          UNION
         SELECT DECODE(stat_name,'PL/SQL execution elapsed time',25) id
              , DECODE(stat_name,'PL/SQL execution elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'PL/SQL execution elapsed time'
          UNION
         SELECT DECODE(stat_name,'inbound PL/SQL rpc elapsed time',26) id
              , DECODE(stat_name,'inbound PL/SQL rpc elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'inbound PL/SQL rpc elapsed time'
          UNION
         SELECT DECODE(stat_name,'PL/SQL compilation elapsed time',27) id
              , DECODE(stat_name,'PL/SQL compilation elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'PL/SQL compilation elapsed time'
          UNION
         SELECT DECODE(stat_name,'Java execution elapsed time',28) id
              , DECODE(stat_name,'Java execution elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'Java execution elapsed time'
          UNION
         SELECT DECODE(stat_name,'repeated bind elapsed time',29) id
              , DECODE(stat_name,'repeated bind elapsed time',10) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'repeated bind elapsed time'
          UNION
         SELECT DECODE(stat_name,'background elapsed time',1) id
              , DECODE(stat_name,'background elapsed time',0) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'background elapsed time'
          UNION
         SELECT DECODE(stat_name,'background cpu time',2) id
              , DECODE(stat_name,'background cpu time',1) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'background cpu time'
          UNION
         SELECT DECODE(stat_name,'RMAN cpu time (backup/restore)',3) id
              , DECODE(stat_name,'RMAN cpu time (backup/restore)',2) pid
              , stat_name
              , value
           FROM v$sys_time_model
          WHERE stat_name = 'RMAN cpu time (backup/restore)'
        )
CONNECT BY PRIOR id = pid START WITH id = 0
'''

[[metrics]]

id = "tabstorage"
name = "テーブル構成"
comment = "'DBA_TABLES'の検索"
category = "SQL実行結果"
text = '''
SELECT   tab.owner owner
       , tab.table_name table_name
       , ROUND(SUM(seg.bytes/1024/1024),3) mbytes
    FROM (SELECT owner
               , segment_name
               , bytes
            FROM dba_segments
           WHERE 1=1
         ) seg
       , dba_tables tab
   WHERE seg.owner = tab.owner
     AND seg.segment_name = tab.table_name
GROUP BY tab.owner
       , tab.table_name
ORDER BY tab.owner
       , tab.table_name
'''

[[metrics]]

id = "sumstorage"
name = "ストレージサマリ"
comment = "各データベースストレージの総容量[MB]の検索"
category = "SQL実行結果"
text = '''
select 'datafiles' type, sum(bytes)/1024/1024 total from dba_data_files
 union
select 'tempfiles' type, sum(bytes)/1024/1024 total from dba_temp_files
 union
select 'redologs' type, sum(bytes)/1024/1024 total from v$log
 union
select 'controlfiles' type, sum(block_size*file_size_blks)/1024/1024 total from v$controlfile
'''
